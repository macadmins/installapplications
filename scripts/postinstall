#!/usr/bin/python
# encoding: utf-8
#
# Copyright 2009-2017 Erik Gomez.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Loads the InstallApplications LaunchAgent LaunchDaemon
from __future__ import absolute_import
from __future__ import print_function
from SystemConfiguration import SCDynamicStoreCopyConsoleUser
import os
import subprocess
import sys


def getconsoleuser():
    cfuser = SCDynamicStoreCopyConsoleUser(None, None, None)
    return cfuser


def launchctl(*arg):
    # Use *arg to pass unlimited variables to command.
    cmd = arg
    run = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, err = run.communicate()
    return output


def main():
    lapath = os.path.join('/Library', 'LaunchAgents',
                          'com.erikng.installapplications.plist')
    ldpath = os.path.join('/Library', 'LaunchDaemons',
                          'com.erikng.installapplications.plist')
    # Fail the install if the admin forgets to change their paths and they
    # don't exist.
    for file in [lapath, ldpath]:
        if os.path.isfile(file):
            pass
        else:
            print('File does not exist: %s' % file)
            sys.exit(1)
    currentuseruid = getconsoleuser()
    launchctl('/bin/launchctl', 'load', ldpath)
    if (currentuseruid[0] is None or currentuseruid[0] == u'loginwindow'
            or currentuseruid[0] == u'_mbsetupuser'):
        pass
    else:
        launchctl('/bin/launchctl', 'asuser', str(currentuseruid[1]),
                  '/bin/launchctl', 'load', lapath)


if __name__ == '__main__':
    main()
